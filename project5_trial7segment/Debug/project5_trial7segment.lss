
project5_trial7segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000154  000001c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000154  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000204  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000973  00000000  00000000  0000028c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000070b  00000000  00000000  00000bff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a0  00000000  00000000  0000130a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  000016ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000403  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000012d  00000000  00000000  00001b23  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001c50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e5       	ldi	r30, 0x54	; 84
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 30       	cpi	r26, 0x0C	; 12
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 73 00 	call	0xe6	; 0xe6 <main>
  9e:	0c 94 a8 00 	jmp	0x150	; 0x150 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <tampilkanAngka>:
	// b7.b6.b5.b4.b3.b2.b1.b0	-> portC
	
	//       b5.b4.b3.b2.b1.b0	-> portC
	//                   dp. g	-> portB
	
	PORTC = seg_code[angkanya];
  a6:	fc 01       	movw	r30, r24
  a8:	e0 50       	subi	r30, 0x00	; 0
  aa:	ff 4f       	sbci	r31, 0xFF	; 255
  ac:	80 81       	ld	r24, Z
  ae:	88 b9       	out	0x08, r24	; 8
	
	temp0 = seg_code[angkanya];
  b0:	80 81       	ld	r24, Z
	temp0 = temp0 >> 6;
  b2:	82 95       	swap	r24
  b4:	86 95       	lsr	r24
  b6:	86 95       	lsr	r24
  b8:	83 70       	andi	r24, 0x03	; 3
	PORTB = temp0;
  ba:	85 b9       	out	0x05, r24	; 5
  bc:	08 95       	ret

000000be <segment1>:
	baca portB 
	diolah -> s1 / PB2 aja
	keluarkan ke portB 
	*/
	
	temp1 =  PINB;
  be:	83 b1       	in	r24, 0x03	; 3
	temp1 &= 0b00000011;
  c0:	83 70       	andi	r24, 0x03	; 3
	temp1 |= 0b11111000; //pasti PB2 = '0'
  c2:	88 6f       	ori	r24, 0xF8	; 248
	PORTB =  temp1;
  c4:	85 b9       	out	0x05, r24	; 5
  c6:	08 95       	ret

000000c8 <segment2>:

void segment2 (void)
{
	char temp1;
		
	temp1 =  PINB;
  c8:	83 b1       	in	r24, 0x03	; 3
	temp1 &= 0b00000011;
  ca:	83 70       	andi	r24, 0x03	; 3
	temp1 |= 0b11110100; //pasti PB3 = '0'
  cc:	84 6f       	ori	r24, 0xF4	; 244
	PORTB =  temp1;
  ce:	85 b9       	out	0x05, r24	; 5
  d0:	08 95       	ret

000000d2 <segment3>:
}
void segment3 (void)
{
	char temp1;
	
	temp1 =  PINB;
  d2:	83 b1       	in	r24, 0x03	; 3
	temp1 &= 0b00000011;
  d4:	83 70       	andi	r24, 0x03	; 3
	temp1 |= 0b11101100; //pasti PB4 = '0'
  d6:	8c 6e       	ori	r24, 0xEC	; 236
	PORTB =  temp1;
  d8:	85 b9       	out	0x05, r24	; 5
  da:	08 95       	ret

000000dc <segment4>:
}
void segment4 (void)
{
	char temp1;
	
	temp1 =  PINB;
  dc:	83 b1       	in	r24, 0x03	; 3
	temp1 &= 0b00000011;
  de:	83 70       	andi	r24, 0x03	; 3
	temp1 |= 0b11011100; //pasti PB5 = '0'
  e0:	8c 6d       	ori	r24, 0xDC	; 220
	PORTB =  temp1;
  e2:	85 b9       	out	0x05, r24	; 5
  e4:	08 95       	ret

000000e6 <main>:
void segment4 (void);

int main(void)
{
	
	DDRB = 0xff;
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xff;
  ea:	87 b9       	out	0x07, r24	; 7
	
	PORTB = 0x00;
  ec:	15 b8       	out	0x05, r1	; 5
//	tampilkanAngka(2);
//	segment1();
	
    while (1) 
    {
		tampilkanAngka(1);
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 53 00 	call	0xa6	; 0xa6 <tampilkanAngka>
		segment1();
  f6:	0e 94 5f 00 	call	0xbe	; 0xbe <segment1>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fa:	8f e3       	ldi	r24, 0x3F	; 63
  fc:	9c e9       	ldi	r25, 0x9C	; 156
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x18>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x1e>
 104:	00 00       	nop
		_delay_ms(10);
		
		tampilkanAngka(2);
 106:	82 e0       	ldi	r24, 0x02	; 2
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0e 94 53 00 	call	0xa6	; 0xa6 <tampilkanAngka>
		segment2();
 10e:	0e 94 64 00 	call	0xc8	; 0xc8 <segment2>
 112:	8f e3       	ldi	r24, 0x3F	; 63
 114:	9c e9       	ldi	r25, 0x9C	; 156
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <main+0x30>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0x36>
 11c:	00 00       	nop
		_delay_ms(10);
		
		tampilkanAngka(3);
 11e:	83 e0       	ldi	r24, 0x03	; 3
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	0e 94 53 00 	call	0xa6	; 0xa6 <tampilkanAngka>
		segment3();
 126:	0e 94 69 00 	call	0xd2	; 0xd2 <segment3>
 12a:	8f e3       	ldi	r24, 0x3F	; 63
 12c:	9c e9       	ldi	r25, 0x9C	; 156
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <main+0x48>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0x4e>
 134:	00 00       	nop
		_delay_ms(10);
		
		tampilkanAngka(4);
 136:	84 e0       	ldi	r24, 0x04	; 4
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 53 00 	call	0xa6	; 0xa6 <tampilkanAngka>
		segment4();
 13e:	0e 94 6e 00 	call	0xdc	; 0xdc <segment4>
 142:	8f e3       	ldi	r24, 0x3F	; 63
 144:	9c e9       	ldi	r25, 0x9C	; 156
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <main+0x60>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0x66>
 14c:	00 00       	nop
 14e:	cf cf       	rjmp	.-98     	; 0xee <main+0x8>

00000150 <_exit>:
 150:	f8 94       	cli

00000152 <__stop_program>:
 152:	ff cf       	rjmp	.-2      	; 0x152 <__stop_program>
